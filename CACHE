cur
new
lock

fd = open cur/<hash>
if faal
	if enoent
		# cache miss
		scoped lock(lock, EX)
		fd = open cur/<hash>
		if faal
			if enoent
				fd = open new/<hash>
				r = lock(fd, EX|NB)
				unlock(lock)
				if r == fail
					lock(fd, SH)
					if fstat(fd).size == 0
						die
				else
					try
						download(fd, <hash>)
					catch
						truncate(fd)
						unlink(new/<hash>)
						die
					scoped lock(lock, EX)
					unlock(fd)
					rename(new/<hash>, cur/<hash>)
			else
				die
	else
		die
return fd

cache manager:
	track:
		cur: open, delete, move_into
			open -> registreer hit
			delete -> verplaats entry naar ghost list
			move_into -> zet provisorische entry om naar echte entry
				- simuleer geregistreerde hits uit provisorische entry
				- eventueel vanuit ghost list
				- ruim oude crap op indien nodig
		new: open, delete
			open -> cache hit (in provisorische entry)
			delete -> verwijder provisorische entry
