#! /usr/bin/env python3

from fruitbak import Fruitbak
from fruitbak.cli import Cli

from os import fsdecode
from sys import stderr
from pathlib import Path
from time import sleep

import click
import gc, atexit

@atexit.register
def check_for_loops():
	if gc.collect() != 0:
		print("W: reference loops at program exit!", file = stderr)

@click.group()
def cli(): pass

@cli.command()
@click.argument('host', required = False)
@click.argument('backup', required = False)
@click.argument('share', required = False)
@click.argument('path', required = False, default = '')
def ls(host, backup, share, path):
	"""Lists hosts, backups, shares and paths"""

	fbak = Fruitbak(confdir = Path('/dev/shm/conf'))

	if host is None:
		for h in fbak:
			print(h.name)
	elif backup is None:
		for b in fbak[host]:
			print(b.index)
	elif share is None:
		for s in fbak[host][backup]:
			print(s.name)
	else:
		for dentry in fbak[host][backup][share].ls(path):
			print(fsdecode(dentry.name))

@cli.command()
def pooltest():
	fbak = Fruitbak(confdir = Path('/dev/shm/conf'))

	def readahead():
		yield b'foo'

	agent = fbak.pool.agent(readahead = readahead())

	agent.put_chunk(b'foo', b'bar')

	action = agent.wait()
	if action.exception:
		raise action.exception
	print(str(action.value))

	agent = None
	fbak = None

	sleep(1)

cli()
